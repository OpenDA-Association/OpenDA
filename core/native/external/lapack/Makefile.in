# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = external/lapack
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_blas.m4 \
	$(top_srcdir)/m4/acx_lapack.m4 $(top_srcdir)/m4/java.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
liblapack_la_DEPENDENCIES = @LTLIBOBJS@
am_liblapack_la_OBJECTS = cbdsqr.lo clagtm.lo ctgexc.lo dlaed0.lo \
	dormqr.lo scsum1.lo slaqps.lo ssbtrd.lo zggevx.lo zlasyf.lo \
	cgbbrd.lo clahef.lo ctgsen.lo dlaed1.lo dormr2.lo sdisna.lo \
	slaqsb.lo sspcon.lo zggglm.lo zlatbs.lo cgbcon.lo clahqr.lo \
	ctgsja.lo dlaed2.lo dormr3.lo second.lo slaqsp.lo sspev.lo \
	zgghrd.lo zlatdf.lo cgbequ.lo clahrd.lo ctgsna.lo dlaed3.lo \
	dormrq.lo sgbbrd.lo slaqsy.lo sspevd.lo zgglse.lo zlatps.lo \
	cgbrfs.lo claic1.lo ctgsy2.lo dlaed4.lo dormrz.lo sgbcon.lo \
	slaqtr.lo sspevx.lo zggqrf.lo zlatrd.lo cgbsv.lo clals0.lo \
	ctgsyl.lo dlaed5.lo dormtr.lo sgbequ.lo slar1v.lo sspgst.lo \
	zggrqf.lo zlatrs.lo cgbsvx.lo clalsa.lo ctpcon.lo dlaed6.lo \
	dpbcon.lo sgbrfs.lo slar2v.lo sspgv.lo zggsvd.lo zlatrz.lo \
	cgbtf2.lo clalsd.lo ctprfs.lo dlaed7.lo dpbequ.lo sgbsv.lo \
	slarf.lo sspgvd.lo zggsvp.lo zlatzm.lo cgbtrf.lo clangb.lo \
	ctptri.lo dlaed8.lo dpbrfs.lo sgbsvx.lo slarfb.lo sspgvx.lo \
	zgtcon.lo zlauu2.lo cgbtrs.lo clange.lo ctptrs.lo dlaed9.lo \
	dpbstf.lo sgbtf2.lo slarfg.lo ssprfs.lo zgtrfs.lo zlauum.lo \
	cgebak.lo clangt.lo ctrcon.lo dlaeda.lo dpbsv.lo sgbtrf.lo \
	slarft.lo sspsv.lo zgtsv.lo zpbcon.lo cgebal.lo clanhb.lo \
	ctrevc.lo dlaein.lo dpbsvx.lo sgbtrs.lo slarfx.lo sspsvx.lo \
	zgtsvx.lo zpbequ.lo cgebd2.lo clanhe.lo ctrexc.lo dlaev2.lo \
	dpbtf2.lo sgebak.lo slargv.lo ssptrd.lo zgttrf.lo zpbrfs.lo \
	cgebrd.lo clanhp.lo ctrrfs.lo dlaexc.lo dpbtrf.lo sgebal.lo \
	slarnv.lo ssptrf.lo zgttrs.lo zpbstf.lo cgecon.lo clanhs.lo \
	ctrsen.lo dlag2.lo dpbtrs.lo sgebd2.lo slarrb.lo ssptri.lo \
	zgtts2.lo zpbsv.lo cgeequ.lo clanht.lo ctrsna.lo dlags2.lo \
	dpocon.lo sgebrd.lo slarre.lo ssptrs.lo zhbev.lo zpbsvx.lo \
	cgees.lo clansb.lo ctrsyl.lo dlagtf.lo dpoequ.lo sgecon.lo \
	slarrf.lo sstebz.lo zhbevd.lo zpbtf2.lo cgeesx.lo clansp.lo \
	ctrti2.lo dlagtm.lo dporfs.lo sgeequ.lo slarrv.lo sstedc.lo \
	zhbevx.lo zpbtrf.lo cgeev.lo clansy.lo ctrtri.lo dlagts.lo \
	dposv.lo sgees.lo slartg.lo sstegr.lo zhbgst.lo zpbtrs.lo \
	cgeevx.lo clantb.lo ctrtrs.lo dlagv2.lo dposvx.lo sgeesx.lo \
	slartv.lo sstein.lo zhbgv.lo zpocon.lo cgegs.lo clantp.lo \
	ctzrqf.lo dlahqr.lo dpotf2.lo sgeev.lo slaruv.lo ssteqr.lo \
	zhbgvd.lo zpoequ.lo cgegv.lo clantr.lo ctzrzf.lo dlahrd.lo \
	dpotrf.lo sgeevx.lo slarz.lo ssterf.lo zhbgvx.lo zporfs.lo \
	cgehd2.lo clapll.lo cung2l.lo dlaic1.lo dpotri.lo sgegs.lo \
	slarzb.lo sstev.lo zhbtrd.lo zposv.lo cgehrd.lo clapmt.lo \
	cung2r.lo dlaln2.lo dpotrs.lo sgegv.lo slarzt.lo sstevd.lo \
	zhecon.lo zposvx.lo cgelq2.lo claqgb.lo cungbr.lo dlals0.lo \
	dppcon.lo sgehd2.lo slas2.lo sstevr.lo zheev.lo zpotf2.lo \
	cgelqf.lo claqge.lo cunghr.lo dlalsa.lo dppequ.lo sgehrd.lo \
	slascl.lo sstevx.lo zheevd.lo zpotrf.lo cgels.lo claqhb.lo \
	cungl2.lo dlalsd.lo dpprfs.lo sgelq2.lo slasd0.lo ssycon.lo \
	zheevr.lo zpotri.lo cgelsd.lo claqhe.lo cunglq.lo dppsv.lo \
	sgelqf.lo slasd1.lo ssyev.lo zheevx.lo zpotrs.lo cgelss.lo \
	claqhp.lo cungql.lo dlamrg.lo dppsvx.lo sgels.lo slasd2.lo \
	ssyevd.lo zhegs2.lo zppcon.lo cgelsx.lo claqp2.lo cungqr.lo \
	dlangb.lo dpptrf.lo sgelsd.lo slasd3.lo ssyevr.lo zhegst.lo \
	zppequ.lo cgelsy.lo claqps.lo cungr2.lo dlange.lo dpptri.lo \
	sgelss.lo slasd4.lo ssyevx.lo zhegv.lo zpprfs.lo cgeql2.lo \
	claqsb.lo cungrq.lo dlangt.lo dpptrs.lo sgelsx.lo slasd5.lo \
	ssygs2.lo zhegvd.lo zppsv.lo cgeqlf.lo claqsp.lo cungtr.lo \
	dlanhs.lo dptcon.lo sgelsy.lo slasd6.lo ssygst.lo zhegvx.lo \
	zppsvx.lo cgeqp3.lo claqsy.lo cunm2l.lo dlansb.lo dpteqr.lo \
	sgeql2.lo slasd7.lo ssygv.lo zherfs.lo zpptrf.lo cgeqpf.lo \
	clar1v.lo cunm2r.lo dlansp.lo dptrfs.lo sgeqlf.lo slasd8.lo \
	ssygvd.lo zhesv.lo zpptri.lo cgeqr2.lo clar2v.lo cunmbr.lo \
	dlanst.lo dptsv.lo sgeqp3.lo slasd9.lo ssygvx.lo zhesvx.lo \
	zpptrs.lo cgeqrf.lo clarcm.lo cunmhr.lo dlansy.lo dptsvx.lo \
	sgeqpf.lo slasda.lo ssyrfs.lo zhetd2.lo zptcon.lo cgerfs.lo \
	clarf.lo cunml2.lo dlantb.lo dpttrf.lo sgeqr2.lo slasdq.lo \
	ssysv.lo zhetf2.lo zpteqr.lo cgerq2.lo clarfb.lo cunmlq.lo \
	dlantp.lo dpttrs.lo sgeqrf.lo slasdt.lo ssysvx.lo zhetrd.lo \
	zptrfs.lo cgerqf.lo clarfg.lo cunmql.lo dlantr.lo dptts2.lo \
	sgerfs.lo slaset.lo ssytd2.lo zhetrf.lo zptsv.lo cgesc2.lo \
	clarft.lo cunmqr.lo dlanv2.lo drscl.lo sgerq2.lo slasq1.lo \
	ssytf2.lo zhetri.lo zptsvx.lo cgesdd.lo clarfx.lo cunmr2.lo \
	dlapll.lo dsbev.lo sgerqf.lo slasq2.lo ssytrd.lo zhetrs.lo \
	zpttrf.lo cgesv.lo clargv.lo cunmr3.lo dlapmt.lo dsbevd.lo \
	sgesc2.lo slasq3.lo ssytrf.lo zhgeqz.lo zpttrs.lo cgesvd.lo \
	clarnv.lo cunmrq.lo dlapy2.lo dsbevx.lo sgesdd.lo slasq4.lo \
	ssytri.lo zhpcon.lo zptts2.lo cgesvx.lo clarrv.lo cunmrz.lo \
	dlapy3.lo dsbgst.lo sgesv.lo slasq5.lo ssytrs.lo zhpev.lo \
	zrot.lo cgetc2.lo clartg.lo cunmtr.lo dlaqgb.lo dsbgv.lo \
	sgesvd.lo slasq6.lo stbcon.lo zhpevd.lo zspcon.lo cgetf2.lo \
	clartv.lo cupgtr.lo dlaqge.lo dsbgvd.lo sgesvx.lo slasr.lo \
	stbrfs.lo zhpevx.lo zspmv.lo cgetrf.lo clarz.lo cupmtr.lo \
	dlaqp2.lo dsbgvx.lo sgetc2.lo slasrt.lo stbtrs.lo zhpgst.lo \
	zspr.lo cgetri.lo clarzb.lo dbdsdc.lo dlaqps.lo dsbtrd.lo \
	sgetf2.lo slassq.lo stgevc.lo zhpgv.lo zsprfs.lo cgetrs.lo \
	clarzt.lo dbdsqr.lo dlaqsb.lo dsecnd.lo sgetrf.lo slasv2.lo \
	stgex2.lo zhpgvd.lo zspsv.lo cggbak.lo clascl.lo ddisna.lo \
	dlaqsp.lo dspcon.lo sgetri.lo slaswp.lo stgexc.lo zhpgvx.lo \
	zspsvx.lo cggbal.lo claset.lo dgbbrd.lo dlaqsy.lo dspev.lo \
	sgetrs.lo slasy2.lo stgsen.lo zhprfs.lo zsptrf.lo cgges.lo \
	clasr.lo dgbcon.lo dlaqtr.lo dspevd.lo sggbak.lo slasyf.lo \
	stgsja.lo zhpsv.lo zsptri.lo cggesx.lo classq.lo dgbequ.lo \
	dlar1v.lo dspevx.lo sggbal.lo slatbs.lo stgsna.lo zhpsvx.lo \
	zsptrs.lo cggev.lo claswp.lo dgbrfs.lo dlar2v.lo dspgst.lo \
	sgges.lo slatdf.lo stgsy2.lo zhptrd.lo zstedc.lo cggevx.lo \
	clasyf.lo dgbsv.lo dlarf.lo dspgv.lo sggesx.lo slatps.lo \
	stgsyl.lo zhptrf.lo zstegr.lo cggglm.lo clatbs.lo dgbsvx.lo \
	dlarfb.lo dspgvd.lo sggev.lo slatrd.lo stpcon.lo zhptri.lo \
	zstein.lo cgghrd.lo clatdf.lo dgbtf2.lo dlarfg.lo dspgvx.lo \
	sggevx.lo slatrs.lo stprfs.lo zhptrs.lo zsteqr.lo cgglse.lo \
	clatps.lo dgbtrf.lo dlarft.lo dsprfs.lo sggglm.lo slatrz.lo \
	stptri.lo zhsein.lo zsycon.lo cggqrf.lo clatrd.lo dgbtrs.lo \
	dlarfx.lo dspsv.lo sgghrd.lo slatzm.lo stptrs.lo zhseqr.lo \
	zsymv.lo cggrqf.lo clatrs.lo dgebak.lo dlargv.lo dspsvx.lo \
	sgglse.lo slauu2.lo strcon.lo zlabrd.lo zsyr.lo cggsvd.lo \
	clatrz.lo dgebal.lo dlarnv.lo dsptrd.lo sggqrf.lo slauum.lo \
	strevc.lo zlacgv.lo zsyrfs.lo cggsvp.lo clatzm.lo dgebd2.lo \
	dlarrb.lo dsptrf.lo sggrqf.lo sopgtr.lo strexc.lo zlacon.lo \
	zsysv.lo cgtcon.lo clauu2.lo dgebrd.lo dlarre.lo dsptri.lo \
	sggsvd.lo sopmtr.lo strrfs.lo zlacp2.lo zsysvx.lo cgtrfs.lo \
	clauum.lo dgecon.lo dlarrf.lo dsptrs.lo sggsvp.lo sorg2l.lo \
	strsen.lo zlacpy.lo zsytf2.lo cgtsv.lo cpbcon.lo dgeequ.lo \
	dlarrv.lo dstebz.lo sgtcon.lo sorg2r.lo strsna.lo zlacrm.lo \
	zsytrf.lo cgtsvx.lo cpbequ.lo dgees.lo dlartg.lo dstedc.lo \
	sgtrfs.lo sorgbr.lo strsyl.lo zlacrt.lo zsytri.lo cgttrf.lo \
	cpbrfs.lo dgeesx.lo dlartv.lo dstegr.lo sgtsv.lo sorghr.lo \
	strti2.lo zladiv.lo zsytrs.lo cgttrs.lo cpbstf.lo dgeev.lo \
	dlaruv.lo dstein.lo sgtsvx.lo sorgl2.lo strtri.lo zlaed0.lo \
	ztbcon.lo cgtts2.lo cpbsv.lo dgeevx.lo dlarz.lo dsteqr.lo \
	sgttrf.lo sorglq.lo strtrs.lo zlaed7.lo ztbrfs.lo chbev.lo \
	cpbsvx.lo dgegs.lo dlarzb.lo dsterf.lo sgttrs.lo sorgql.lo \
	stzrqf.lo zlaed8.lo ztbtrs.lo chbevd.lo cpbtf2.lo dgegv.lo \
	dlarzt.lo dstev.lo sgtts2.lo sorgqr.lo stzrzf.lo zlaein.lo \
	ztgevc.lo chbevx.lo cpbtrf.lo dgehd2.lo dlas2.lo dstevd.lo \
	shgeqz.lo sorgr2.lo xerbla.lo zlaesy.lo ztgex2.lo chbgst.lo \
	cpbtrs.lo dgehrd.lo dlascl.lo dstevr.lo shsein.lo sorgrq.lo \
	zbdsqr.lo zlaev2.lo ztgexc.lo chbgv.lo cpocon.lo dgelq2.lo \
	dlasd0.lo dstevx.lo shseqr.lo sorgtr.lo zdrot.lo zlags2.lo \
	ztgsen.lo chbgvd.lo cpoequ.lo dgelqf.lo dlasd1.lo dsycon.lo \
	slabad.lo sorm2l.lo zdrscl.lo zlagtm.lo ztgsja.lo chbgvx.lo \
	cporfs.lo dgels.lo dlasd2.lo dsyev.lo slabrd.lo sorm2r.lo \
	zgbbrd.lo zlahef.lo ztgsna.lo chbtrd.lo cposv.lo dgelsd.lo \
	dlasd3.lo dsyevd.lo slacon.lo sormbr.lo zgbcon.lo zlahqr.lo \
	ztgsy2.lo checon.lo cposvx.lo dgelss.lo dlasd4.lo dsyevr.lo \
	slacpy.lo sormhr.lo zgbequ.lo zlahrd.lo ztgsyl.lo cheev.lo \
	cpotf2.lo dgelsx.lo dlasd5.lo dsyevx.lo sladiv.lo sorml2.lo \
	zgbrfs.lo zlaic1.lo ztpcon.lo cheevd.lo cpotrf.lo dgelsy.lo \
	dlasd6.lo dsygs2.lo slae2.lo sormlq.lo zgbsv.lo zlals0.lo \
	ztprfs.lo cheevr.lo cpotri.lo dgeql2.lo dlasd7.lo dsygst.lo \
	slaebz.lo sormql.lo zgbsvx.lo zlalsa.lo ztptri.lo cheevx.lo \
	cpotrs.lo dgeqlf.lo dlasd8.lo dsygv.lo slaed0.lo sormqr.lo \
	zgbtf2.lo zlalsd.lo ztptrs.lo chegs2.lo cppcon.lo dgeqp3.lo \
	dlasd9.lo dsygvd.lo slaed1.lo sormr2.lo zgbtrf.lo zlangb.lo \
	ztrcon.lo chegst.lo cppequ.lo dgeqpf.lo dlasda.lo dsygvx.lo \
	slaed2.lo sormr3.lo zgbtrs.lo zlange.lo ztrevc.lo chegv.lo \
	cpprfs.lo dgeqr2.lo dlasdq.lo dsyrfs.lo slaed3.lo sormrq.lo \
	zgebak.lo zlangt.lo ztrexc.lo chegvd.lo cppsv.lo dgeqrf.lo \
	dlasdt.lo dsysv.lo slaed4.lo sormrz.lo zgebal.lo zlanhb.lo \
	ztrrfs.lo chegvx.lo cppsvx.lo dgerfs.lo dlaset.lo dsysvx.lo \
	slaed5.lo sormtr.lo zgebd2.lo zlanhe.lo ztrsen.lo cherfs.lo \
	cpptrf.lo dgerq2.lo dlasq1.lo dsytd2.lo slaed6.lo spbcon.lo \
	zgebrd.lo zlanhp.lo ztrsna.lo chesv.lo cpptri.lo dgerqf.lo \
	dlasq2.lo dsytf2.lo slaed7.lo spbequ.lo zgecon.lo zlanhs.lo \
	ztrsyl.lo chesvx.lo cpptrs.lo dgesc2.lo dlasq3.lo dsytrd.lo \
	slaed8.lo spbrfs.lo zgeequ.lo zlanht.lo ztrti2.lo chetd2.lo \
	cptcon.lo dgesdd.lo dlasq4.lo dsytrf.lo slaed9.lo spbstf.lo \
	zgees.lo zlansb.lo ztrtri.lo chetf2.lo cpteqr.lo dgesv.lo \
	dlasq5.lo dsytri.lo slaeda.lo spbsv.lo zgeesx.lo zlansp.lo \
	ztrtrs.lo chetrd.lo cptrfs.lo dgesvd.lo dlasq6.lo dsytrs.lo \
	slaein.lo spbsvx.lo zgeev.lo zlansy.lo ztzrqf.lo chetrf.lo \
	cptsv.lo dgesvx.lo dlasr.lo dtbcon.lo slaev2.lo spbtf2.lo \
	zgeevx.lo zlantb.lo ztzrzf.lo chetri.lo cptsvx.lo dgetc2.lo \
	dlasrt.lo dtbrfs.lo slaexc.lo spbtrf.lo zgegs.lo zlantp.lo \
	zung2l.lo chetrs.lo cpttrf.lo dgetf2.lo dlassq.lo dtbtrs.lo \
	slag2.lo spbtrs.lo zgegv.lo zlantr.lo zung2r.lo chgeqz.lo \
	cpttrs.lo dgetrf.lo dlasv2.lo dtgevc.lo slags2.lo spocon.lo \
	zgehd2.lo zlapll.lo zungbr.lo chpcon.lo cptts2.lo dgetri.lo \
	dlaswp.lo dtgex2.lo slagtf.lo spoequ.lo zgehrd.lo zlapmt.lo \
	zunghr.lo chpev.lo crot.lo dgetrs.lo dlasy2.lo dtgexc.lo \
	slagtm.lo sporfs.lo zgelq2.lo zlaqgb.lo zungl2.lo chpevd.lo \
	cspcon.lo dggbak.lo dlasyf.lo dtgsen.lo slagts.lo sposv.lo \
	zgelqf.lo zlaqge.lo zunglq.lo chpevx.lo cspmv.lo dggbal.lo \
	dlatbs.lo dtgsja.lo slagv2.lo sposvx.lo zgels.lo zlaqhb.lo \
	zungql.lo chpgst.lo cspr.lo dgges.lo dlatdf.lo dtgsna.lo \
	slahqr.lo spotf2.lo zgelsd.lo zlaqhe.lo zungqr.lo chpgv.lo \
	csprfs.lo dggesx.lo dlatps.lo dtgsy2.lo slahrd.lo spotrf.lo \
	zgelss.lo zlaqhp.lo zungr2.lo chpgvd.lo cspsv.lo dggev.lo \
	dlatrd.lo dtgsyl.lo slaic1.lo spotri.lo zgelsx.lo zlaqp2.lo \
	zungrq.lo chpgvx.lo cspsvx.lo dggevx.lo dlatrs.lo dtpcon.lo \
	slaln2.lo spotrs.lo zgelsy.lo zlaqps.lo zungtr.lo chprfs.lo \
	csptrf.lo dggglm.lo dlatrz.lo dtprfs.lo slals0.lo sppcon.lo \
	zgeql2.lo zlaqsb.lo zunm2l.lo chpsv.lo csptri.lo dgghrd.lo \
	dlatzm.lo dtptri.lo slalsa.lo sppequ.lo zgeqlf.lo zlaqsp.lo \
	zunm2r.lo chpsvx.lo csptrs.lo dgglse.lo dlauu2.lo dtptrs.lo \
	slalsd.lo spprfs.lo zgeqp3.lo zlaqsy.lo zunmbr.lo chptrd.lo \
	csrot.lo dggqrf.lo dlauum.lo dtrcon.lo sppsv.lo zgeqpf.lo \
	zlar1v.lo zunmhr.lo chptrf.lo csrscl.lo dggrqf.lo dopgtr.lo \
	dtrevc.lo slamrg.lo sppsvx.lo zgeqr2.lo zlar2v.lo zunml2.lo \
	chptri.lo cstedc.lo dggsvd.lo dopmtr.lo dtrexc.lo slangb.lo \
	spptrf.lo zgeqrf.lo zlarcm.lo zunmlq.lo chptrs.lo cstegr.lo \
	dggsvp.lo dorg2l.lo dtrrfs.lo slange.lo spptri.lo zgerfs.lo \
	zlarf.lo zunmql.lo chsein.lo cstein.lo dgtcon.lo dorg2r.lo \
	dtrsen.lo slangt.lo spptrs.lo zgerq2.lo zlarfb.lo zunmqr.lo \
	chseqr.lo csteqr.lo dgtrfs.lo dorgbr.lo dtrsna.lo slanhs.lo \
	sptcon.lo zgerqf.lo zlarfg.lo zunmr2.lo clabrd.lo csycon.lo \
	dgtsv.lo dorghr.lo dtrsyl.lo slansb.lo spteqr.lo zgesc2.lo \
	zlarft.lo zunmr3.lo clacgv.lo csymv.lo dgtsvx.lo dorgl2.lo \
	dtrti2.lo slansp.lo sptrfs.lo zgesdd.lo zlarfx.lo zunmrq.lo \
	clacon.lo csyr.lo dgttrf.lo dorglq.lo dtrtri.lo slanst.lo \
	sptsv.lo zgesv.lo zlargv.lo zunmrz.lo clacp2.lo csyrfs.lo \
	dgttrs.lo dorgql.lo dtrtrs.lo slansy.lo sptsvx.lo zgesvd.lo \
	zlarnv.lo zunmtr.lo clacpy.lo csysv.lo dgtts2.lo dorgqr.lo \
	dtzrqf.lo slantb.lo spttrf.lo zgesvx.lo zlarrv.lo zupgtr.lo \
	clacrm.lo csysvx.lo dhgeqz.lo dorgr2.lo dtzrzf.lo slantp.lo \
	spttrs.lo zgetc2.lo zlartg.lo zupmtr.lo clacrt.lo csytf2.lo \
	dhsein.lo dorgrq.lo dzsum1.lo slantr.lo sptts2.lo zgetf2.lo \
	zlartv.lo cladiv.lo csytrf.lo dhseqr.lo dorgtr.lo icmax1.lo \
	slanv2.lo srscl.lo zgetrf.lo zlarz.lo claed0.lo csytri.lo \
	dlabad.lo dorm2l.lo ieeeck.lo slapll.lo ssbev.lo zgetri.lo \
	zlarzb.lo claed7.lo csytrs.lo dlabrd.lo dorm2r.lo ilaenv.lo \
	slapmt.lo ssbevd.lo zgetrs.lo zlarzt.lo claed8.lo ctbcon.lo \
	dlacon.lo dormbr.lo izmax1.lo slapy2.lo ssbevx.lo zggbak.lo \
	zlascl.lo claein.lo ctbrfs.lo dlacpy.lo dormhr.lo lsame.lo \
	slapy3.lo ssbgst.lo zggbal.lo zlaset.lo claesy.lo ctbtrs.lo \
	dladiv.lo dorml2.lo lsamen.lo slaqgb.lo ssbgv.lo zgges.lo \
	zlasr.lo claev2.lo ctgevc.lo dlae2.lo dormlq.lo sbdsdc.lo \
	slaqge.lo ssbgvd.lo zggesx.lo zlassq.lo clags2.lo ctgex2.lo \
	dlaebz.lo dormql.lo sbdsqr.lo slaqp2.lo ssbgvx.lo zggev.lo \
	zlaswp.lo slamch.lo dlamch.lo
liblapack_la_OBJECTS = $(am_liblapack_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
liblapack_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(liblapack_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
SOURCES = $(liblapack_la_SOURCES)
DIST_SOURCES = $(liblapack_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_DIR = @BLAS_DIR@
BLAS_LIBS = @BLAS_LIBS@
BRIDGE_DIR = @BRIDGE_DIR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXAMPLE_DIR = @EXAMPLE_DIR@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAC_FLAGS = @JAVAC_FLAGS@
JAVADOC = @JAVADOC@
JAVAH = @JAVAH@
JDK = @JDK@
JNI_INCLUDES = @JNI_INCLUDES@
LAPACK_DIR = @LAPACK_DIR@
LAPACK_LIBS = @LAPACK_LIBS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_EXT = @LIBS_EXT@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LTL_BLAS_ADD = @LTL_BLAS_ADD@
LTL_LAPACK_ADD = @LTL_LAPACK_ADD@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPI_ROOT = @MPI_ROOT@
NETCDF_ROOT = @NETCDF_ROOT@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENDA_NATIVE_DIR = @OPENDA_NATIVE_DIR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POLLUTE2D_DIR = @POLLUTE2D_DIR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_prog_compiler_pic_F77 = @lt_prog_compiler_pic_F77@
lt_prog_compiler_pic_FC = @lt_prog_compiler_pic_FC@
lt_prog_compiler_static_F77 = @lt_prog_compiler_static_F77@
lt_prog_compiler_static_FC = @lt_prog_compiler_static_FC@
lt_prog_compiler_wl_F77 = @lt_prog_compiler_wl_F77@
lt_prog_compiler_wl_FC = @lt_prog_compiler_wl_FC@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
xml2config = @xml2config@
lib_LTLIBRARIES = liblapack.la
liblapack_la_SOURCES = \
cbdsqr.f  clagtm.f  ctgexc.f  dlaed0.f  dormqr.f  scsum1.f  slaqps.f  ssbtrd.f  zggevx.f  zlasyf.f \
cgbbrd.f  clahef.f  ctgsen.f  dlaed1.f  dormr2.f  sdisna.f  slaqsb.f  sspcon.f  zggglm.f  zlatbs.f \
cgbcon.f  clahqr.f  ctgsja.f  dlaed2.f  dormr3.f  second.f  slaqsp.f  sspev.f   zgghrd.f  zlatdf.f \
cgbequ.f  clahrd.f  ctgsna.f  dlaed3.f  dormrq.f  sgbbrd.f  slaqsy.f  sspevd.f  zgglse.f  zlatps.f \
cgbrfs.f  claic1.f  ctgsy2.f  dlaed4.f  dormrz.f  sgbcon.f  slaqtr.f  sspevx.f  zggqrf.f  zlatrd.f \
cgbsv.f   clals0.f  ctgsyl.f  dlaed5.f  dormtr.f  sgbequ.f  slar1v.f  sspgst.f  zggrqf.f  zlatrs.f \
cgbsvx.f  clalsa.f  ctpcon.f  dlaed6.f  dpbcon.f  sgbrfs.f  slar2v.f  sspgv.f   zggsvd.f  zlatrz.f \
cgbtf2.f  clalsd.f  ctprfs.f  dlaed7.f  dpbequ.f  sgbsv.f   slarf.f   sspgvd.f  zggsvp.f  zlatzm.f \
cgbtrf.f  clangb.f  ctptri.f  dlaed8.f  dpbrfs.f  sgbsvx.f  slarfb.f  sspgvx.f  zgtcon.f  zlauu2.f \
cgbtrs.f  clange.f  ctptrs.f  dlaed9.f  dpbstf.f  sgbtf2.f  slarfg.f  ssprfs.f  zgtrfs.f  zlauum.f \
cgebak.f  clangt.f  ctrcon.f  dlaeda.f  dpbsv.f   sgbtrf.f  slarft.f  sspsv.f   zgtsv.f   zpbcon.f \
cgebal.f  clanhb.f  ctrevc.f  dlaein.f  dpbsvx.f  sgbtrs.f  slarfx.f  sspsvx.f  zgtsvx.f  zpbequ.f \
cgebd2.f  clanhe.f  ctrexc.f  dlaev2.f  dpbtf2.f  sgebak.f  slargv.f  ssptrd.f  zgttrf.f  zpbrfs.f \
cgebrd.f  clanhp.f  ctrrfs.f  dlaexc.f  dpbtrf.f  sgebal.f  slarnv.f  ssptrf.f  zgttrs.f  zpbstf.f \
cgecon.f  clanhs.f  ctrsen.f  dlag2.f   dpbtrs.f  sgebd2.f  slarrb.f  ssptri.f  zgtts2.f  zpbsv.f \
cgeequ.f  clanht.f  ctrsna.f  dlags2.f  dpocon.f  sgebrd.f  slarre.f  ssptrs.f  zhbev.f   zpbsvx.f \
cgees.f   clansb.f  ctrsyl.f  dlagtf.f  dpoequ.f  sgecon.f  slarrf.f  sstebz.f  zhbevd.f  zpbtf2.f \
cgeesx.f  clansp.f  ctrti2.f  dlagtm.f  dporfs.f  sgeequ.f  slarrv.f  sstedc.f  zhbevx.f  zpbtrf.f \
cgeev.f   clansy.f  ctrtri.f  dlagts.f  dposv.f   sgees.f   slartg.f  sstegr.f  zhbgst.f  zpbtrs.f \
cgeevx.f  clantb.f  ctrtrs.f  dlagv2.f  dposvx.f  sgeesx.f  slartv.f  sstein.f  zhbgv.f   zpocon.f \
cgegs.f   clantp.f  ctzrqf.f  dlahqr.f  dpotf2.f  sgeev.f   slaruv.f  ssteqr.f  zhbgvd.f  zpoequ.f \
cgegv.f   clantr.f  ctzrzf.f  dlahrd.f  dpotrf.f  sgeevx.f  slarz.f   ssterf.f  zhbgvx.f  zporfs.f \
cgehd2.f  clapll.f  cung2l.f  dlaic1.f  dpotri.f  sgegs.f   slarzb.f  sstev.f   zhbtrd.f  zposv.f \
cgehrd.f  clapmt.f  cung2r.f  dlaln2.f  dpotrs.f  sgegv.f   slarzt.f  sstevd.f  zhecon.f  zposvx.f \
cgelq2.f  claqgb.f  cungbr.f  dlals0.f  dppcon.f  sgehd2.f  slas2.f   sstevr.f  zheev.f   zpotf2.f \
cgelqf.f  claqge.f  cunghr.f  dlalsa.f  dppequ.f  sgehrd.f  slascl.f  sstevx.f  zheevd.f  zpotrf.f \
cgels.f   claqhb.f  cungl2.f  dlalsd.f  dpprfs.f  sgelq2.f  slasd0.f  ssycon.f  zheevr.f  zpotri.f \
cgelsd.f  claqhe.f  cunglq.f  dppsv.f   sgelqf.f  slasd1.f  ssyev.f   zheevx.f  zpotrs.f \
cgelss.f  claqhp.f  cungql.f  dlamrg.f  dppsvx.f  sgels.f   slasd2.f  ssyevd.f  zhegs2.f  zppcon.f \
cgelsx.f  claqp2.f  cungqr.f  dlangb.f  dpptrf.f  sgelsd.f  slasd3.f  ssyevr.f  zhegst.f  zppequ.f \
cgelsy.f  claqps.f  cungr2.f  dlange.f  dpptri.f  sgelss.f  slasd4.f  ssyevx.f  zhegv.f   zpprfs.f \
cgeql2.f  claqsb.f  cungrq.f  dlangt.f  dpptrs.f  sgelsx.f  slasd5.f  ssygs2.f  zhegvd.f  zppsv.f \
cgeqlf.f  claqsp.f  cungtr.f  dlanhs.f  dptcon.f  sgelsy.f  slasd6.f  ssygst.f  zhegvx.f  zppsvx.f \
cgeqp3.f  claqsy.f  cunm2l.f  dlansb.f  dpteqr.f  sgeql2.f  slasd7.f  ssygv.f   zherfs.f  zpptrf.f \
cgeqpf.f  clar1v.f  cunm2r.f  dlansp.f  dptrfs.f  sgeqlf.f  slasd8.f  ssygvd.f  zhesv.f   zpptri.f \
cgeqr2.f  clar2v.f  cunmbr.f  dlanst.f  dptsv.f   sgeqp3.f  slasd9.f  ssygvx.f  zhesvx.f  zpptrs.f \
cgeqrf.f  clarcm.f  cunmhr.f  dlansy.f  dptsvx.f  sgeqpf.f  slasda.f  ssyrfs.f  zhetd2.f  zptcon.f \
cgerfs.f  clarf.f   cunml2.f  dlantb.f  dpttrf.f  sgeqr2.f  slasdq.f  ssysv.f   zhetf2.f  zpteqr.f \
cgerq2.f  clarfb.f  cunmlq.f  dlantp.f  dpttrs.f  sgeqrf.f  slasdt.f  ssysvx.f  zhetrd.f  zptrfs.f \
cgerqf.f  clarfg.f  cunmql.f  dlantr.f  dptts2.f  sgerfs.f  slaset.f  ssytd2.f  zhetrf.f  zptsv.f \
cgesc2.f  clarft.f  cunmqr.f  dlanv2.f  drscl.f   sgerq2.f  slasq1.f  ssytf2.f  zhetri.f  zptsvx.f \
cgesdd.f  clarfx.f  cunmr2.f  dlapll.f  dsbev.f   sgerqf.f  slasq2.f  ssytrd.f  zhetrs.f  zpttrf.f \
cgesv.f   clargv.f  cunmr3.f  dlapmt.f  dsbevd.f  sgesc2.f  slasq3.f  ssytrf.f  zhgeqz.f  zpttrs.f \
cgesvd.f  clarnv.f  cunmrq.f  dlapy2.f  dsbevx.f  sgesdd.f  slasq4.f  ssytri.f  zhpcon.f  zptts2.f \
cgesvx.f  clarrv.f  cunmrz.f  dlapy3.f  dsbgst.f  sgesv.f   slasq5.f  ssytrs.f  zhpev.f   zrot.f \
cgetc2.f  clartg.f  cunmtr.f  dlaqgb.f  dsbgv.f   sgesvd.f  slasq6.f  stbcon.f  zhpevd.f  zspcon.f \
cgetf2.f  clartv.f  cupgtr.f  dlaqge.f  dsbgvd.f  sgesvx.f  slasr.f   stbrfs.f  zhpevx.f  zspmv.f \
cgetrf.f  clarz.f   cupmtr.f  dlaqp2.f  dsbgvx.f  sgetc2.f  slasrt.f  stbtrs.f  zhpgst.f  zspr.f \
cgetri.f  clarzb.f  dbdsdc.f  dlaqps.f  dsbtrd.f  sgetf2.f  slassq.f  stgevc.f  zhpgv.f   zsprfs.f \
cgetrs.f  clarzt.f  dbdsqr.f  dlaqsb.f  dsecnd.f  sgetrf.f  slasv2.f  stgex2.f  zhpgvd.f  zspsv.f \
cggbak.f  clascl.f  ddisna.f  dlaqsp.f  dspcon.f  sgetri.f  slaswp.f  stgexc.f  zhpgvx.f  zspsvx.f \
cggbal.f  claset.f  dgbbrd.f  dlaqsy.f  dspev.f   sgetrs.f  slasy2.f  stgsen.f  zhprfs.f  zsptrf.f \
cgges.f   clasr.f   dgbcon.f  dlaqtr.f  dspevd.f  sggbak.f  slasyf.f  stgsja.f  zhpsv.f   zsptri.f \
cggesx.f  classq.f  dgbequ.f  dlar1v.f  dspevx.f  sggbal.f  slatbs.f  stgsna.f  zhpsvx.f  zsptrs.f \
cggev.f   claswp.f  dgbrfs.f  dlar2v.f  dspgst.f  sgges.f   slatdf.f  stgsy2.f  zhptrd.f  zstedc.f \
cggevx.f  clasyf.f  dgbsv.f   dlarf.f   dspgv.f   sggesx.f  slatps.f  stgsyl.f  zhptrf.f  zstegr.f \
cggglm.f  clatbs.f  dgbsvx.f  dlarfb.f  dspgvd.f  sggev.f   slatrd.f  stpcon.f  zhptri.f  zstein.f \
cgghrd.f  clatdf.f  dgbtf2.f  dlarfg.f  dspgvx.f  sggevx.f  slatrs.f  stprfs.f  zhptrs.f  zsteqr.f \
cgglse.f  clatps.f  dgbtrf.f  dlarft.f  dsprfs.f  sggglm.f  slatrz.f  stptri.f  zhsein.f  zsycon.f \
cggqrf.f  clatrd.f  dgbtrs.f  dlarfx.f  dspsv.f   sgghrd.f  slatzm.f  stptrs.f  zhseqr.f  zsymv.f \
cggrqf.f  clatrs.f  dgebak.f  dlargv.f  dspsvx.f  sgglse.f  slauu2.f  strcon.f  zlabrd.f  zsyr.f \
cggsvd.f  clatrz.f  dgebal.f  dlarnv.f  dsptrd.f  sggqrf.f  slauum.f  strevc.f  zlacgv.f  zsyrfs.f \
cggsvp.f  clatzm.f  dgebd2.f  dlarrb.f  dsptrf.f  sggrqf.f  sopgtr.f  strexc.f  zlacon.f  zsysv.f \
cgtcon.f  clauu2.f  dgebrd.f  dlarre.f  dsptri.f  sggsvd.f  sopmtr.f  strrfs.f  zlacp2.f  zsysvx.f \
cgtrfs.f  clauum.f  dgecon.f  dlarrf.f  dsptrs.f  sggsvp.f  sorg2l.f  strsen.f  zlacpy.f  zsytf2.f \
cgtsv.f   cpbcon.f  dgeequ.f  dlarrv.f  dstebz.f  sgtcon.f  sorg2r.f  strsna.f  zlacrm.f  zsytrf.f \
cgtsvx.f  cpbequ.f  dgees.f   dlartg.f  dstedc.f  sgtrfs.f  sorgbr.f  strsyl.f  zlacrt.f  zsytri.f \
cgttrf.f  cpbrfs.f  dgeesx.f  dlartv.f  dstegr.f  sgtsv.f   sorghr.f  strti2.f  zladiv.f  zsytrs.f \
cgttrs.f  cpbstf.f  dgeev.f   dlaruv.f  dstein.f  sgtsvx.f  sorgl2.f  strtri.f  zlaed0.f  ztbcon.f \
cgtts2.f  cpbsv.f   dgeevx.f  dlarz.f   dsteqr.f  sgttrf.f  sorglq.f  strtrs.f  zlaed7.f  ztbrfs.f \
chbev.f   cpbsvx.f  dgegs.f   dlarzb.f  dsterf.f  sgttrs.f  sorgql.f  stzrqf.f  zlaed8.f  ztbtrs.f \
chbevd.f  cpbtf2.f  dgegv.f   dlarzt.f  dstev.f   sgtts2.f  sorgqr.f  stzrzf.f  zlaein.f  ztgevc.f \
chbevx.f  cpbtrf.f  dgehd2.f  dlas2.f   dstevd.f  shgeqz.f  sorgr2.f  xerbla.f  zlaesy.f  ztgex2.f \
chbgst.f  cpbtrs.f  dgehrd.f  dlascl.f  dstevr.f  shsein.f  sorgrq.f  zbdsqr.f  zlaev2.f  ztgexc.f \
chbgv.f   cpocon.f  dgelq2.f  dlasd0.f  dstevx.f  shseqr.f  sorgtr.f  zdrot.f   zlags2.f  ztgsen.f \
chbgvd.f  cpoequ.f  dgelqf.f  dlasd1.f  dsycon.f  slabad.f  sorm2l.f  zdrscl.f  zlagtm.f  ztgsja.f \
chbgvx.f  cporfs.f  dgels.f   dlasd2.f  dsyev.f   slabrd.f  sorm2r.f  zgbbrd.f  zlahef.f  ztgsna.f \
chbtrd.f  cposv.f   dgelsd.f  dlasd3.f  dsyevd.f  slacon.f  sormbr.f  zgbcon.f  zlahqr.f  ztgsy2.f \
checon.f  cposvx.f  dgelss.f  dlasd4.f  dsyevr.f  slacpy.f  sormhr.f  zgbequ.f  zlahrd.f  ztgsyl.f \
cheev.f   cpotf2.f  dgelsx.f  dlasd5.f  dsyevx.f  sladiv.f  sorml2.f  zgbrfs.f  zlaic1.f  ztpcon.f \
cheevd.f  cpotrf.f  dgelsy.f  dlasd6.f  dsygs2.f  slae2.f   sormlq.f  zgbsv.f   zlals0.f  ztprfs.f \
cheevr.f  cpotri.f  dgeql2.f  dlasd7.f  dsygst.f  slaebz.f  sormql.f  zgbsvx.f  zlalsa.f  ztptri.f \
cheevx.f  cpotrs.f  dgeqlf.f  dlasd8.f  dsygv.f   slaed0.f  sormqr.f  zgbtf2.f  zlalsd.f  ztptrs.f \
chegs2.f  cppcon.f  dgeqp3.f  dlasd9.f  dsygvd.f  slaed1.f  sormr2.f  zgbtrf.f  zlangb.f  ztrcon.f \
chegst.f  cppequ.f  dgeqpf.f  dlasda.f  dsygvx.f  slaed2.f  sormr3.f  zgbtrs.f  zlange.f  ztrevc.f \
chegv.f   cpprfs.f  dgeqr2.f  dlasdq.f  dsyrfs.f  slaed3.f  sormrq.f  zgebak.f  zlangt.f  ztrexc.f \
chegvd.f  cppsv.f   dgeqrf.f  dlasdt.f  dsysv.f   slaed4.f  sormrz.f  zgebal.f  zlanhb.f  ztrrfs.f \
chegvx.f  cppsvx.f  dgerfs.f  dlaset.f  dsysvx.f  slaed5.f  sormtr.f  zgebd2.f  zlanhe.f  ztrsen.f \
cherfs.f  cpptrf.f  dgerq2.f  dlasq1.f  dsytd2.f  slaed6.f  spbcon.f  zgebrd.f  zlanhp.f  ztrsna.f \
chesv.f   cpptri.f  dgerqf.f  dlasq2.f  dsytf2.f  slaed7.f  spbequ.f  zgecon.f  zlanhs.f  ztrsyl.f \
chesvx.f  cpptrs.f  dgesc2.f  dlasq3.f  dsytrd.f  slaed8.f  spbrfs.f  zgeequ.f  zlanht.f  ztrti2.f \
chetd2.f  cptcon.f  dgesdd.f  dlasq4.f  dsytrf.f  slaed9.f  spbstf.f  zgees.f   zlansb.f  ztrtri.f \
chetf2.f  cpteqr.f  dgesv.f   dlasq5.f  dsytri.f  slaeda.f  spbsv.f   zgeesx.f  zlansp.f  ztrtrs.f \
chetrd.f  cptrfs.f  dgesvd.f  dlasq6.f  dsytrs.f  slaein.f  spbsvx.f  zgeev.f   zlansy.f  ztzrqf.f \
chetrf.f  cptsv.f   dgesvx.f  dlasr.f   dtbcon.f  slaev2.f  spbtf2.f  zgeevx.f  zlantb.f  ztzrzf.f \
chetri.f  cptsvx.f  dgetc2.f  dlasrt.f  dtbrfs.f  slaexc.f  spbtrf.f  zgegs.f   zlantp.f  zung2l.f \
chetrs.f  cpttrf.f  dgetf2.f  dlassq.f  dtbtrs.f  slag2.f   spbtrs.f  zgegv.f   zlantr.f  zung2r.f \
chgeqz.f  cpttrs.f  dgetrf.f  dlasv2.f  dtgevc.f  slags2.f  spocon.f  zgehd2.f  zlapll.f  zungbr.f \
chpcon.f  cptts2.f  dgetri.f  dlaswp.f  dtgex2.f  slagtf.f  spoequ.f  zgehrd.f  zlapmt.f  zunghr.f \
chpev.f   crot.f    dgetrs.f  dlasy2.f  dtgexc.f  slagtm.f  sporfs.f  zgelq2.f  zlaqgb.f  zungl2.f \
chpevd.f  cspcon.f  dggbak.f  dlasyf.f  dtgsen.f  slagts.f  sposv.f   zgelqf.f  zlaqge.f  zunglq.f \
chpevx.f  cspmv.f   dggbal.f  dlatbs.f  dtgsja.f  slagv2.f  sposvx.f  zgels.f   zlaqhb.f  zungql.f \
chpgst.f  cspr.f    dgges.f   dlatdf.f  dtgsna.f  slahqr.f  spotf2.f  zgelsd.f  zlaqhe.f  zungqr.f \
chpgv.f   csprfs.f  dggesx.f  dlatps.f  dtgsy2.f  slahrd.f  spotrf.f  zgelss.f  zlaqhp.f  zungr2.f \
chpgvd.f  cspsv.f   dggev.f   dlatrd.f  dtgsyl.f  slaic1.f  spotri.f  zgelsx.f  zlaqp2.f  zungrq.f \
chpgvx.f  cspsvx.f  dggevx.f  dlatrs.f  dtpcon.f  slaln2.f  spotrs.f  zgelsy.f  zlaqps.f  zungtr.f \
chprfs.f  csptrf.f  dggglm.f  dlatrz.f  dtprfs.f  slals0.f  sppcon.f  zgeql2.f  zlaqsb.f  zunm2l.f \
chpsv.f   csptri.f  dgghrd.f  dlatzm.f  dtptri.f  slalsa.f  sppequ.f  zgeqlf.f  zlaqsp.f  zunm2r.f \
chpsvx.f  csptrs.f  dgglse.f  dlauu2.f  dtptrs.f  slalsd.f  spprfs.f  zgeqp3.f  zlaqsy.f  zunmbr.f \
chptrd.f  csrot.f   dggqrf.f  dlauum.f  dtrcon.f  sppsv.f   zgeqpf.f  zlar1v.f  zunmhr.f \
chptrf.f  csrscl.f  dggrqf.f  dopgtr.f  dtrevc.f  slamrg.f  sppsvx.f  zgeqr2.f  zlar2v.f  zunml2.f \
chptri.f  cstedc.f  dggsvd.f  dopmtr.f  dtrexc.f  slangb.f  spptrf.f  zgeqrf.f  zlarcm.f  zunmlq.f \
chptrs.f  cstegr.f  dggsvp.f  dorg2l.f  dtrrfs.f  slange.f  spptri.f  zgerfs.f  zlarf.f   zunmql.f \
chsein.f  cstein.f  dgtcon.f  dorg2r.f  dtrsen.f  slangt.f  spptrs.f  zgerq2.f  zlarfb.f  zunmqr.f \
chseqr.f  csteqr.f  dgtrfs.f  dorgbr.f  dtrsna.f  slanhs.f  sptcon.f  zgerqf.f  zlarfg.f  zunmr2.f \
clabrd.f  csycon.f  dgtsv.f   dorghr.f  dtrsyl.f  slansb.f  spteqr.f  zgesc2.f  zlarft.f  zunmr3.f \
clacgv.f  csymv.f   dgtsvx.f  dorgl2.f  dtrti2.f  slansp.f  sptrfs.f  zgesdd.f  zlarfx.f  zunmrq.f \
clacon.f  csyr.f    dgttrf.f  dorglq.f  dtrtri.f  slanst.f  sptsv.f   zgesv.f   zlargv.f  zunmrz.f \
clacp2.f  csyrfs.f  dgttrs.f  dorgql.f  dtrtrs.f  slansy.f  sptsvx.f  zgesvd.f  zlarnv.f  zunmtr.f \
clacpy.f  csysv.f   dgtts2.f  dorgqr.f  dtzrqf.f  slantb.f  spttrf.f  zgesvx.f  zlarrv.f  zupgtr.f \
clacrm.f  csysvx.f  dhgeqz.f  dorgr2.f  dtzrzf.f  slantp.f  spttrs.f  zgetc2.f  zlartg.f  zupmtr.f \
clacrt.f  csytf2.f  dhsein.f  dorgrq.f  dzsum1.f  slantr.f  sptts2.f  zgetf2.f  zlartv.f \
cladiv.f  csytrf.f  dhseqr.f  dorgtr.f  icmax1.f  slanv2.f  srscl.f   zgetrf.f  zlarz.f \
claed0.f  csytri.f  dlabad.f  dorm2l.f  ieeeck.f  slapll.f  ssbev.f   zgetri.f  zlarzb.f \
claed7.f  csytrs.f  dlabrd.f  dorm2r.f  ilaenv.f  slapmt.f  ssbevd.f  zgetrs.f  zlarzt.f \
claed8.f  ctbcon.f  dlacon.f  dormbr.f  izmax1.f  slapy2.f  ssbevx.f  zggbak.f  zlascl.f \
claein.f  ctbrfs.f  dlacpy.f  dormhr.f  lsame.f   slapy3.f  ssbgst.f  zggbal.f  zlaset.f \
claesy.f  ctbtrs.f  dladiv.f  dorml2.f  lsamen.f  slaqgb.f  ssbgv.f   zgges.f   zlasr.f \
claev2.f  ctgevc.f  dlae2.f   dormlq.f  sbdsdc.f  slaqge.f  ssbgvd.f  zggesx.f  zlassq.f \
clags2.f  ctgex2.f  dlaebz.f  dormql.f  sbdsqr.f  slaqp2.f  ssbgvx.f  zggev.f   zlaswp.f \
slamch.f  dlamch.f  

liblapack_la_LIBADD = @LTLIBOBJS@ $(BLASLIB)
liblapack_la_LDFLAGS = -version-info 0:0:0
all: all-am

.SUFFIXES:
.SUFFIXES: .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu external/lapack/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu external/lapack/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liblapack.la: $(liblapack_la_OBJECTS) $(liblapack_la_DEPENDENCIES) $(EXTRA_liblapack_la_DEPENDENCIES) 
	$(AM_V_F77LD)$(liblapack_la_LINK) -rpath $(libdir) $(liblapack_la_OBJECTS) $(liblapack_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


#These special files must be compiled without optimization!!
slamch.lo: slamch.f
	$(LIBTOOL) --mode=compile --tag=F77  $(F77) -O0 -g -c $(srcdir)/slamch.f

dlamch.lo: dlamch.f
	$(LIBTOOL) --mode=compile --tag=F77  $(F77) -O0 -g -c $(srcdir)/dlamch.f

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
